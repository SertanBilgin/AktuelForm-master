<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>